# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Mapping as typing___Mapping,
    MutableMapping as typing___MutableMapping,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class ValueType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> ValueType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[ValueType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, ValueType]]: ...
VALUE_TYPE_UNDEFINED = typing___cast(ValueType, 0)
RAW = typing___cast(ValueType, 1)
DATASET_URI = typing___cast(ValueType, 2)
CSV_URI = typing___cast(ValueType, 3)
PICKLE_URI = typing___cast(ValueType, 4)
PICKLE_BLOB = typing___cast(ValueType, 5)
PLASMA_ID = typing___cast(ValueType, 6)
LARGE_RAW = typing___cast(ValueType, 7)
LARGE_PICKLE_BLOB = typing___cast(ValueType, 8)

class NullValue(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> NullValue: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[NullValue]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, NullValue]]: ...
NULL_VALUE = typing___cast(NullValue, 0)

class ValueError(google___protobuf___message___Message):
    message = ... # type: typing___Text

    def __init__(self,
        message : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ValueError: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"message"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"message"]) -> None: ...

class ValueList(google___protobuf___message___Message):

    @property
    def items(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ValueRaw]: ...

    def __init__(self,
        items : typing___Optional[typing___Iterable[ValueRaw]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ValueList: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"items"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"items"]) -> None: ...

class ValueDict(google___protobuf___message___Message):
    class ItemsEntry(google___protobuf___message___Message):
        key = ... # type: typing___Text

        @property
        def value(self) -> ValueRaw: ...

        def __init__(self,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[ValueRaw] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> ValueDict.ItemsEntry: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"value"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"key",u"value"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"value",b"value"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[b"key",b"value"]) -> None: ...


    @property
    def items(self) -> typing___MutableMapping[typing___Text, ValueRaw]: ...

    def __init__(self,
        items : typing___Optional[typing___Mapping[typing___Text, ValueRaw]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ValueDict: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"items"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"items"]) -> None: ...

class ValueRaw(google___protobuf___message___Message):
    null = ... # type: NullValue
    double = ... # type: float
    int64 = ... # type: int
    bool = ... # type: bool
    string = ... # type: typing___Text
    bytes = ... # type: bytes

    @property
    def list(self) -> ValueList: ...

    @property
    def dict(self) -> ValueDict: ...

    def __init__(self,
        null : typing___Optional[NullValue] = None,
        double : typing___Optional[float] = None,
        int64 : typing___Optional[int] = None,
        bool : typing___Optional[bool] = None,
        string : typing___Optional[typing___Text] = None,
        bytes : typing___Optional[bytes] = None,
        list : typing___Optional[ValueList] = None,
        dict : typing___Optional[ValueDict] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ValueRaw: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"bool",u"bytes",u"dict",u"double",u"int64",u"list",u"null",u"raw",u"string"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"bool",u"bytes",u"dict",u"double",u"int64",u"list",u"null",u"raw",u"string"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"bool",b"bool",u"bytes",b"bytes",u"dict",b"dict",u"double",b"double",u"int64",b"int64",u"list",b"list",u"null",b"null",u"raw",b"raw",u"string",b"string"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"bool",b"bytes",b"dict",b"double",b"int64",b"list",b"null",b"raw",b"string"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"raw",b"raw"]) -> typing_extensions___Literal["null","double","int64","bool","string","bytes","list","dict"]: ...

class Value(google___protobuf___message___Message):
    dataset_uri = ... # type: typing___Text
    csv_uri = ... # type: typing___Text
    pickle_uri = ... # type: typing___Text
    pickle_blob = ... # type: bytes
    plasma_id = ... # type: bytes

    @property
    def error(self) -> ValueError: ...

    @property
    def raw(self) -> ValueRaw: ...

    def __init__(self,
        error : typing___Optional[ValueError] = None,
        raw : typing___Optional[ValueRaw] = None,
        dataset_uri : typing___Optional[typing___Text] = None,
        csv_uri : typing___Optional[typing___Text] = None,
        pickle_uri : typing___Optional[typing___Text] = None,
        pickle_blob : typing___Optional[bytes] = None,
        plasma_id : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Value: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"csv_uri",u"dataset_uri",u"error",u"pickle_blob",u"pickle_uri",u"plasma_id",u"raw",u"value"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"csv_uri",u"dataset_uri",u"error",u"pickle_blob",u"pickle_uri",u"plasma_id",u"raw",u"value"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"csv_uri",b"csv_uri",u"dataset_uri",b"dataset_uri",u"error",b"error",u"pickle_blob",b"pickle_blob",u"pickle_uri",b"pickle_uri",u"plasma_id",b"plasma_id",u"raw",b"raw",u"value",b"value"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"csv_uri",b"dataset_uri",b"error",b"pickle_blob",b"pickle_uri",b"plasma_id",b"raw",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"value",b"value"]) -> typing_extensions___Literal["error","raw","dataset_uri","csv_uri","pickle_uri","pickle_blob","plasma_id"]: ...
